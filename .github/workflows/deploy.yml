name: Deploy (Simple JAR over SSH)

on:
  push:
    branches: [ main ]          # main push 시 자동 실행
  workflow_dispatch: {}         # 수동 실행도 가능

env:
  SERVER_DIR: /home/ubuntu/BE   # EC2의 프로젝트 디렉터리
  APP_JAR: app.jar              # 서버에서 사용할 파일명(고정)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # JDK & Gradle
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Gradle (cache)
        uses: gradle/actions/setup-gradle@v3

      - name: Build Boot JAR
        run: |
          chmod +x ./gradlew
          ./gradlew --no-daemon clean bootJar -x test
          echo "JAR_PATH=$(ls -1 build/libs/*.jar | head -n 1)" >> $GITHUB_ENV

      # --- EC2에 JAR 복사 (target=디렉터리!)
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}        # 예: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}          # PEM 내용
          port: 22
          source: "${{ env.JAR_PATH }}"
          target: "${{ env.SERVER_DIR }}/upload"   # ← 폴더만 지정!
          overwrite: true

      # --- 서버에서 기존 앱 중지 & 새 JAR 배치 후 nohup 재기동
      - name: Restart app on EC2 (nohup)
        uses: appleboy/ssh-action@v1.2.0
        env:
          SERVER_DIR: ${{ env.SERVER_DIR }}
          APP_JAR: ${{ env.APP_JAR }}
          SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }} # 예: dev / prod
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -euo pipefail

            echo "[prep] ensure directories"
            mkdir -p "$SERVER_DIR/upload"

            echo "[pick] select latest jar"
            JAR=$(ls -t "$SERVER_DIR"/upload/*.jar | head -n 1 || true)
            if [ -z "${JAR:-}" ]; then
              echo "No JAR found in $SERVER_DIR/upload"; exit 1
            fi
            echo "latest jar: $JAR"

            echo "[stop] kill old process if running"
            pkill -f "$SERVER_DIR/$APP_JAR" || true
            sleep 2

            echo "[deploy] move jar to $SERVER_DIR/$APP_JAR"
            mv -f "$JAR" "$SERVER_DIR/$APP_JAR"
            chmod +x "$SERVER_DIR/$APP_JAR"

            echo "[start] nohup spring with profile=$SPRING_PROFILES_ACTIVE"
            cd "$SERVER_DIR"
            nohup java -jar -Dspring.profiles.active="$SPRING_PROFILES_ACTIVE" "$APP_JAR" > app.log 2>&1 &

            echo "[health] wait & probe actuator"
            for i in 1 2 3 4 5 6 7 8 9 10; do
              if curl -fsS http://127.0.0.1:8080/actuator/health >/dev/null; then
                echo "Deployed & healthy ✅"
                exit 0
              fi
              echo "waiting... ($i/10)"; sleep 3
            done

            echo "Health check failed ❌ (tail app.log)"
            tail -n 200 app.log || true
            exit 1
