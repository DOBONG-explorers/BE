plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}


dependencies {
    // --- Web (MVC 서버: 톰캣) ---
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // --- WebFlux (WebClient 등 리액티브 API 사용) ---
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // --- Actuator / Validation ---
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // --- JPA / DB ---
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly   'com.mysql:mysql-connector-j:8.4.0'   // MySQL 드라이버

    // --- Security / OAuth2 JOSE / JWT ---
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // --- Redis ---
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // --- Swagger (Spring MVC 용) ---
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // --- Lombok ---
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // --- Test ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
    useJUnitPlatform()
}
