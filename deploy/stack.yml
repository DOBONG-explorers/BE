version: "3.9"

configs:
  nginx_conf:
    file: ./nginx/nginx.conf
  nginx_vhost:
    file: ./nginx/conf/dobong.conf
  maintenance_html:
    file: ./nginx/maintenance.html

networks:
  web:
    driver: overlay

services:
  api:
    image: ${IMAGE_NAME}:${TAG}
    networks: [web]
    environment:
      # --- 공통 ---
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

      # --- DB (application-dev.yml이 DEV_* 사용하므로 DEV_*로 맞춤) ---
      DEV_DB_URL: ${DEV_DB_URL}
      DEV_DB_USER: ${DEV_DB_USER}
      DEV_DB_PASSWORD: ${DEV_DB_PASSWORD}

      # --- 그 외 키들 ---
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION: ${JWT_EXPIRATION}

      DOBONG_EVENT: ${DOBONG_EVENT}
      URL_DOBONG_EVENT: ${URL_DOBONG_EVENT}
      DOBONG_HERI: ${DOBONG_HERI}
      API_KEY: ${API_KEY}
      CONT_CODE: ${CONT_CODE}

      KAKAO_AUTH_API_KEY: ${KAKAO_AUTH_API_KEY}

      GOOGLE_WEB_CLIENT_ID: ${GOOGLE_WEB_CLIENT_ID}
      GOOGLE_PLACES_API_KEY: ${GOOGLE_PLACES_API_KEY}

    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
        monitor: 30s
      restart_policy:
        condition: on-failure

    # wget 없을 수 있으니 curl로 권장
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 6

  nginx:
    image: nginx:1.27-alpine
    networks: [web]
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf
        mode: 0444
      - source: nginx_vhost
        target: /etc/nginx/conf.d/dobong.conf
        mode: 0444
      - source: maintenance_html
        target: /usr/share/nginx/html/maintenance.html
        mode: 0444
